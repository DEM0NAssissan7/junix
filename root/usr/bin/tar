// Jtar: a terrible clone of UNIX tar

let extract = false
let compress = false;
let source = null;
let dest = null;

// nice program things
function set_extract() {
    if(compress === false) {
        extract = true;
    } else {
        fprintf(stderr, "Cannot set extract and compress at the same time.\n");
        exit();
    }
}
function set_compress() {
    if(extract === false) {
        compress = true;
    } else {
        fprintf(stderr, "Cannot set extract and compress at the same time.\n");
        exit();
    }
}

function show_usage() {
    printf("Usage: tar [x/c] [SOURCE] [DEST]\n");
    exit();
}

function check_valid_input() {
    if(source === null) {
        fprintf(stderr, "Source is invalid\n");
        exit();
    }
    if(dest === null) {
        fprintf(stderr, "Destination is invalid\n");
        exit();
    }
}


this.main = function(argc, envp) {
    load("tar", envp);
    ldlibs(argc, envp);

    if(argc.length === 0)
        show_usage()
    for (let c of argc[0]) {
        switch(c) {
            case 'x':
                set_extract();
                break;
            case 'c':
                set_compress();
                break;
        }
    }
    source = argc[1];
    dest = argc[2];

    check_valid_input();

    if(compress) {
        let data = stringify(source);
        let fd = fopen(dest, "w");
        write(fd, data);
    } else if(extract) {
        let fd = fopen(source, "r");
        parse(read(fd), dest);
    }

    exit();
}